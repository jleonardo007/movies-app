{"version":3,"sources":["resources/popcorn.png","Helpers/movie-genres.js","Components/FeaturesBar/FeaturesBar.js","Components/MovieCard/MovieCard.js","Services/api.js","Components/Home/Home.js","Components/ListsMenu/ListsMenu.js","Components/MoviesLists/MoviesLists.js","Components/Movie/Movie.js","App.js","index.js"],"names":["module","exports","genres","id","name","FeaturesBar","fetchByCategory","search","filter","sort","useState","isActive","setActive","searchInput","setInput","handleSearch","trim","alert","className","style","cursor","onClick","to","onChange","e","target","value","parseInt","hidden","defaultValue","color","map","genre","index","key","type","placeholder","input","onKeyDown","MovieCard","movie","children","src","poster_path","Image","alt","original_title","title","fetchNowPlayingMovies","a","pageNumber","fetch","response","json","results","fetchPopularMovies","fetchTrendingMovies","fetchUpcomingMovies","searchMovie","query","fetchMovie","movieID","fetchMovieVideos","videos","find","video","fetchSimilarMovies","similarMovies","slice","Home","observerTarget","useRef","setTitle","movies","setMovies","setPage","setQuery","genreID","setID","sortBy","setSort","useEffect","API","localStorage","lists","setItem","JSON","stringify","listType","observer","IntersectionObserver","entries","isIntersecting","prevPage","root","rootMargin","thresold","current","observe","disconnect","loadSortedMovies","b","Date","parse","release_date","prevMovies","popularity","vote_average","loadFilteredMovies","genre_ids","includes","filteredResults","sortedResults","concat","loadMoreMovies","loadMoreMoviesOnSearch","sortMovies","handleFetchMoviesByCategory","category","handleSearchMovies","result","length","handleFilter","ref","MenuList","listParent","addMovie","list","listStorage","userList","replace","push","createUserList","MoviesLists","listName","useParams","setList","forEach","listItem","storage","splice","deleteList","movieId","listId","deleteMovie","Movie","setMovie","trailer","setTrailer","similar","setSimilar","some","overview","videoId","App","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8d0110.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.406b8801.png\";","const genres = [\n  {\n    id: 28,\n    name: \"Action\",\n  },\n  {\n    id: 12,\n    name: \"Adventure\",\n  },\n  {\n    id: 16,\n    name: \"Animation\",\n  },\n  {\n    id: 35,\n    name: \"Comedy\",\n  },\n  {\n    id: 80,\n    name: \"Crime\",\n  },\n  {\n    id: 99,\n    name: \"Documentary\",\n  },\n  {\n    id: 18,\n    name: \"Drama\",\n  },\n  {\n    id: 10751,\n    name: \"Family\",\n  },\n  {\n    id: 14,\n    name: \"Fantasy\",\n  },\n  {\n    id: 36,\n    name: \"History\",\n  },\n  {\n    id: 27,\n    name: \"Horror\",\n  },\n  {\n    id: 10402,\n    name: \"Music\",\n  },\n  {\n    id: 9648,\n    name: \"Mystery\",\n  },\n  {\n    id: 10749,\n    name: \"Romance\",\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\",\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\",\n  },\n  {\n    id: 53,\n    name: \"Thriller\",\n  },\n  {\n    id: 10752,\n    name: \"War\",\n  },\n  {\n    id: 37,\n    name: \"Western\",\n  },\n];\n\nexport default genres;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsSearch, BsList } from \"react-icons/bs\";\nimport { FaWindowClose } from \"react-icons/fa\";\nimport genres from \"../../Helpers/movie-genres\";\nimport \"./FeaturesBar.css\";\n\nfunction FeaturesBar({ fetchByCategory, search, filter, sort }) {\n  const [isActive, setActive] = useState(false);\n  const [searchInput, setInput] = useState(\"\");\n\n  const handleSideBar = () => {\n    setActive(!isActive);\n  };\n\n  const handleInput = (input) => {\n    setInput(input);\n  };\n\n  const handleSearch = () => {\n    if (searchInput.trim()) {\n      search(searchInput);\n      setInput(\"\");\n    } else alert(\"Invalid Search\");\n  };\n\n  return (\n    <nav className=\"features-bar\">\n      <ul\n        className={`features-bar__features-list ${\n          isActive ? \"features-bar__features-list--sidebar\" : \"\"\n        }`}\n      >\n        <li\n          className=\"features-bar__item\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            fetchByCategory(\"trending\");\n          }}\n        >\n          Trending\n        </li>\n        <li\n          className=\"features-bar__item\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            fetchByCategory(\"popular\");\n          }}\n        >\n          Popular\n        </li>\n        <li\n          className=\"features-bar__item\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            fetchByCategory();\n          }}\n        >\n          Now playing\n        </li>\n        <li\n          className=\"features-bar__item\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            fetchByCategory(\"upcoming\");\n          }}\n        >\n          Upcoming\n        </li>\n        <li className=\"features-bar__item\">\n          <Link to=\"/lists/favorites\">Your Lists</Link>\n        </li>\n        <li className=\"features-bar__item\">\n          <select\n            name=\"filter\"\n            onChange={(e) => {\n              if (e.target.value === \"0\") {\n                filter(parseInt(e.target.value));\n                e.target.value = e.target.value = \"Genre\";\n              } else filter(parseInt(e.target.value));\n            }}\n          >\n            <option hidden defaultValue>\n              Genre\n            </option>\n            <option value=\"0\" style={{ color: \"tomato\" }}>\n              Clear filter\n            </option>\n            {genres.map((genre, index) => {\n              return (\n                <option key={index} value={genre.id}>\n                  {genre.name}\n                </option>\n              );\n            })}\n          </select>\n        </li>\n        <li className=\"features-bar__item\">\n          <select\n            name=\"sort\"\n            onChange={(e) => {\n              sort(e.target.value);\n              if (e.target.value === \"clear\")\n                e.target.value = e.target.value = \"Sort\";\n            }}\n          >\n            <option hidden defaultValue>\n              Sort\n            </option>\n            <option value=\"clear\" style={{ color: \"tomato\" }}>\n              Clear Sort\n            </option>\n            <option value=\"year\">Release year</option>\n            <option value=\"popularity\">Popularity</option>\n            <option value=\"voted\">Most voted</option>\n          </select>\n        </li>\n      </ul>\n      <div className=\"toggle-sidebar\" onClick={handleSideBar}>\n        {isActive ? <FaWindowClose /> : <BsList />}\n      </div>\n      <div\n        className={`features-bar__search ${\n          isActive ? \"features-bar__search--hide\" : \"\"\n        }`}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search a movie\"\n          value={searchInput}\n          onChange={(e) => {\n            handleInput(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") handleSearch();\n          }}\n        />\n        <button\n          type=\"submit\"\n          onClick={() => {\n            handleSearch();\n          }}\n        >\n          <BsSearch />\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default FeaturesBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MovieCard.css\";\nimport Image from \"../../resources/popcorn.png\";\n\nfunction MovieCard({ movie, children }) {\n  return (\n    <article className=\"movie-card\">\n      <div className=\"movie-card__image\">\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : Image\n          }\n          alt={movie.original_title}\n          title={movie.original_title}\n        />\n      </div>\n      <div className=\"movie-card__title\">\n        <Link to={`/movie/${movie.id}`}>{movie.original_title}</Link>\n        {children}\n      </div>\n    </article>\n  );\n}\n\nexport default MovieCard;\n","export default {\n  fetchNowPlayingMovies: async (pageNumber = 1) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US&page=${pageNumber}`\n    );\n    const { results } = await response.json();\n    return results;\n  },\n\n  fetchPopularMovies: async (pageNumber = 1) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US&page=${pageNumber}`\n    );\n\n    const { results } = await response.json();\n    return results;\n  },\n\n  fetchTrendingMovies: async () => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=af058d99e581a98b7f284b08a4b31810`\n    );\n\n    const { results } = await response.json();\n    return results;\n  },\n\n  fetchUpcomingMovies: async (pageNumber = 1) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US&page=${pageNumber}`\n    );\n\n    const { results } = await response.json();\n    return results;\n  },\n\n  searchMovie: async (query, pageNumber = 1) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US&query=${query}&page=${pageNumber}&include_adult=false`\n    );\n\n    const { results } = await response.json();\n    return results;\n  },\n\n  fetchMovie: async (movieID) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US`\n    );\n    const movie = await response.json();\n    return movie;\n  },\n\n  fetchMovieVideos: async (movieID) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}/videos?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US`\n    );\n\n    const videos = await response.json();\n    return videos.results.find((video) => video.type === \"Trailer\");\n  },\n\n  fetchSimilarMovies: async (movieID) => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}/similar?api_key=af058d99e581a98b7f284b08a4b31810&language=en-US&page=1`\n    );\n\n    const similarMovies = await response.json();\n    return similarMovies.results.slice(0, 10);\n  },\n};\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport FeaturesBar from \"../FeaturesBar/FeaturesBar\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport API from \"../../Services/api\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const observerTarget = useRef(null);\n  const [title, setTitle] = useState(\"Now Playing\");\n  const [movies, setMovies] = useState(null);\n  const [pageNumber, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [genreID, setID] = useState(0);\n  const [sortBy, setSort] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      setMovies(await API.fetchNowPlayingMovies());\n    })();\n  }, []);\n\n  //Creating list storage\n  useEffect(() => {\n    if (!localStorage.lists) {\n      localStorage.setItem(\n        \"lists\",\n        JSON.stringify([\n          {\n            id: \"favorites\",\n            name: \"Favorites\",\n            listType: \"default\",\n            movies: [],\n          },\n          {\n            id: \"view-later\",\n            name: \"View later\",\n            listType: \"default\",\n            movies: [],\n          },\n          { id: \"viewed\", name: \"Viewed\", listType: \"default\", movies: [] },\n        ])\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleInfiniteScroll = (entries) => {\n      if (entries[0].isIntersecting) {\n        setPage((prevPage) => prevPage + 1);\n      }\n    };\n\n    const observer = new IntersectionObserver(handleInfiniteScroll, {\n      root: null,\n      rootMargin: \"20px\",\n      thresold: 1.0,\n    });\n\n    if (observerTarget.current) observer.observe(observerTarget.current);\n\n    return () => {\n      //Observer cleanup\n      observer.disconnect();\n    };\n  }, []);\n\n  //\"Infinite scroll\" effect\n  useEffect(() => {\n    const loadSortedMovies = (movies, sortBy) => {\n      switch (sortBy) {\n        case \"year\":\n          movies.sort(\n            (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n          );\n          break;\n\n        case \"popularity\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort((a, b) => b.popularity - a.popularity),\n          ]);\n\n          break;\n\n        case \"voted\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort((a, b) => b.vote_average - a.vote_average),\n          ]);\n          break;\n\n        default:\n          break;\n      }\n\n      return movies;\n    };\n\n    const loadFilteredMovies = (movies, genreID) => {\n      const results = movies.filter((movie) => {\n        return movie.genre_ids.includes(genreID);\n      });\n\n      return results;\n    };\n\n    const loadMoreMovies = async () => {\n      let results = [];\n      let filteredResults = [];\n      let sortedResults = [];\n\n      switch (title) {\n        case \"Popular Movies\":\n          results = await API.fetchPopularMovies(pageNumber);\n\n          if (genreID !== 0)\n            filteredResults = loadFilteredMovies(results, genreID);\n\n          if (sortBy !== \"clear\")\n            sortedResults = loadSortedMovies(results, sortBy);\n          break;\n\n        case \"Upcoming\":\n          results = await API.fetchUpcomingMovies(pageNumber);\n\n          if (genreID !== 0)\n            filteredResults = loadFilteredMovies(results, genreID);\n\n          if (sortBy !== \"clear\")\n            sortedResults = loadSortedMovies(results, sortBy);\n          break;\n\n        case \"Now Playing\":\n          results = await API.fetchNowPlayingMovies(pageNumber);\n\n          if (genreID !== 0)\n            filteredResults = loadFilteredMovies(results, genreID);\n\n          if (sortBy !== \"clear\")\n            sortedResults = loadSortedMovies(results, sortBy);\n          break;\n\n        default:\n          break;\n      }\n\n      if (genreID !== 0) {\n        setMovies((prevMovies) =>\n          prevMovies ? prevMovies.concat(...filteredResults) : null\n        );\n      } else if (sortBy) {\n        setMovies((prevMovies) =>\n          prevMovies ? prevMovies.concat(...sortedResults) : null\n        );\n      } else {\n        setMovies((prevMovies) =>\n          prevMovies ? prevMovies.concat(...results) : null\n        );\n      }\n    };\n\n    if (pageNumber > 1) loadMoreMovies();\n  }, [pageNumber, title, genreID, sortBy]);\n\n  // \"Infinite scroll\" effect applied on search\n  useEffect(() => {\n    const loadMoreMoviesOnSearch = async () => {\n      const results = await API.searchMovie(query, pageNumber);\n      setMovies((prevMovies) =>\n        prevMovies ? prevMovies.concat(...results) : null\n      );\n    };\n\n    if (pageNumber > 1 && query) loadMoreMoviesOnSearch();\n  }, [pageNumber, query]);\n\n  // Filter movies effect\n  useEffect(() => {\n    const filterMovies = () => {\n      setMovies((prevMovies) => [\n        ...prevMovies.filter((movie) => {\n          return movie.genre_ids.includes(genreID);\n        }),\n      ]);\n    };\n\n    if (genreID !== 0) filterMovies();\n  }, [genreID]);\n\n  // Sort movies effect\n  useEffect(() => {\n    const sortMovies = () => {\n      switch (sortBy) {\n        case \"clear\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort((a, b) => b.popularity - a.popularity),\n          ]);\n          break;\n\n        case \"year\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort(\n              (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n            ),\n          ]);\n          break;\n\n        case \"popularity\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort((a, b) => b.popularity - a.popularity),\n          ]);\n\n          break;\n\n        case \"voted\":\n          setMovies((prevMovies) => [\n            ...prevMovies.sort((a, b) => b.vote_average - a.vote_average),\n          ]);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    if (sortBy) sortMovies();\n  }, [sortBy]);\n\n  const handleFetchMoviesByCategory = async (category) => {\n    setSort(\"\");\n    setQuery(\"\");\n    setPage(1);\n    setMovies(null);\n    if (genreID !== 0) setID(0);\n\n    switch (category) {\n      case \"trending\":\n        setTitle(\"Trending Movies\");\n        setMovies(await API.fetchTrendingMovies());\n        break;\n\n      case \"popular\":\n        setTitle(\"Popular Movies\");\n        setMovies(await API.fetchPopularMovies());\n        break;\n\n      case \"upcoming\":\n        setTitle(\"Upcoming\");\n        setMovies(await API.fetchUpcomingMovies());\n        break;\n\n      default:\n        setTitle(\"Now Playing\");\n        setMovies(await API.fetchNowPlayingMovies());\n        break;\n    }\n  };\n\n  const handleSearchMovies = async (query) => {\n    setQuery(query);\n    const result = await API.searchMovie(query);\n    setMovies(null);\n\n    if (result.length === 0) setTitle(\"No results\");\n    else {\n      setPage(1);\n      setTitle(`Results for \"${query}\"`);\n      setMovies(await API.searchMovie(query));\n    }\n  };\n\n  const handleFilter = async (id) => {\n    if (id === 0) {\n      setID(0);\n      setTitle(\"Now Playing\");\n      setPage(0);\n      setMovies(await API.fetchNowPlayingMovies());\n    } else setID(id);\n  };\n\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n\n  return (\n    <div className=\"home\">\n      <FeaturesBar\n        fetchByCategory={handleFetchMoviesByCategory}\n        search={handleSearchMovies}\n        filter={handleFilter}\n        sort={handleSort}\n      />\n      <h1 className=\"home__title\">{title}</h1>\n\n      {movies ? (\n        <div className=\"home__movies\">\n          {movies.map((movie, index) => {\n            return <MovieCard key={index} movie={movie} />;\n          })}\n        </div>\n      ) : (\n        <div className=\"fetching-movie\">Fetching movies</div>\n      )}\n      <div className=\"home__loader\" ref={observerTarget} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaListUl } from \"react-icons/fa\";\nimport \"./ListsMenu.css\";\n\nfunction MenuList({ lists, listParent, movie, addMovie }) {\n  /*\n    The prop \"listParent\" means if <ListMenu/> is on <MoviesLists> (listParent=true) \n    or <Movie/> (listParent=false).\n\n    **if listParent = true <ListMenu/> renders links to all lists saved on localStorage.\n\n    **if listParent = false <ListMenu/> renders span tags, when one of them has been clicked\n    the movie adds to a list.\n\n    **When user creates a list, this is added to local storage (listParent = true), if listParent = false \n    list is created and a movie is added to this.\n\n  */\n\n  const [input, setInput] = useState(\"\");\n\n  const createUserList = () => {\n    const listStorage = JSON.parse(localStorage.lists);\n    const list = listStorage.find((list) => list.name === input);\n    let userList = {};\n\n    if (list) {\n      alert(`\"${input}\" already exits`);\n    } else {\n      userList = {\n        id: input.replace(/ /g, \"-\"),\n        listType: \"user list\",\n        name: input,\n        movies: listParent ? [] : [].concat(movie),\n      };\n\n      listStorage.push(userList);\n      localStorage.setItem(\"lists\", JSON.stringify(listStorage));\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"lists-menu\">\n      <FaListUl className=\"list-icon\" />\n      <ul className=\"lists-menu__lists\">\n        <li className=\"list-menu__item\" style={{ color: \"#e94560\" }}>\n          {listParent ? \"Go to\" : \"Add to\"}\n        </li>\n        {lists\n          ? lists.map((list, index) => {\n              return (\n                <li className=\"list-menu__item\" key={index}>\n                  {listParent ? (\n                    <Link to={`/lists/${list.id}`}>{list.name}</Link>\n                  ) : (\n                    <span\n                      onClick={() => {\n                        addMovie(list.id, list.name);\n                      }}\n                    >\n                      {list.name}\n                    </span>\n                  )}\n                </li>\n              );\n            })\n          : null}\n\n        <li className=\"list-menu__item\">\n          <input\n            type=\"text\"\n            placeholder=\"Create a list\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && input.trim()) createUserList();\n            }}\n          />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default MenuList;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaHome, FaTrashAlt, FaWindowClose } from \"react-icons/fa\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport ListsMenu from \"../ListsMenu/ListsMenu\";\nimport \"./MoviesLists.css\";\n\nfunction MoviesLists() {\n  const { listName } = useParams();\n  const [list, setList] = useState(null);\n\n  useEffect(() => {\n    const listStorage = JSON.parse(localStorage.lists);\n\n    setList(listStorage.find((list) => list.id === listName));\n  }, [listName]);\n\n  const deleteList = () => {\n    const listStorage = JSON.parse(localStorage.lists);\n\n    if (list.listType === \"default\") {\n      listStorage.forEach((listItem, index, storage) => {\n        if (listItem.id === list.id) storage[index].movies = [];\n      });\n    } else {\n      listStorage.forEach((listItem, index, storage) => {\n        if (listItem.id === list.id) storage.splice(index, 1);\n      });\n    }\n\n    localStorage.setItem(\"lists\", JSON.stringify(listStorage));\n  };\n\n  const deleteMovie = (movieId, listId) => {\n    const listStorage = JSON.parse(localStorage.lists);\n\n    list.movies.forEach((movie, index, movies) => {\n      if (movie.id === movieId) movies.splice(index, 1);\n    });\n\n    listStorage.forEach((listItem, index, storage) => {\n      if (listItem.id === listId) storage[index] = { ...list };\n    });\n\n    localStorage.setItem(\"lists\", JSON.stringify(listStorage));\n    setList({ ...list });\n  };\n\n  return (\n    <div className=\"movies-list\">\n      <div className=\"movies-list__header\">\n        <h1 className=\"movies-list__title\">{list ? list.name : null}</h1>\n        <Link to=\"/home\">\n          <FaHome className=\"movie-list__icons\" title={\"Go home\"} />\n        </Link>\n        <ListsMenu\n          className=\"movie-list__icons\"\n          lists={JSON.parse(localStorage.lists)}\n          listParent={true}\n        />\n        <Link to={\"/lists/favorites\"}>\n          <FaTrashAlt\n            className=\"movie-list__icons\"\n            title={\"Delete this list\"}\n            onClick={() => {\n              deleteList();\n            }}\n          />\n        </Link>\n      </div>\n\n      <section className=\"movies-list__movies\">\n        {list\n          ? list.movies.map((movie, index) => {\n              return (\n                <MovieCard movie={movie} key={index}>\n                  <FaWindowClose\n                    className=\"movies-list__delete-icon\"\n                    title={\"delete movie\"}\n                    onClick={() => {\n                      deleteMovie(movie.id, list.id);\n                    }}\n                  />\n                </MovieCard>\n              );\n            })\n          : null}\n      </section>\n    </div>\n  );\n}\n\nexport default MoviesLists;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Youtube from \"react-youtube\";\nimport { FaHome } from \"react-icons/fa\";\nimport API from \"../../Services/api\";\nimport ListsMenu from \"../ListsMenu/ListsMenu\";\nimport \"./Movie.css\";\n\nfunction Movie() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [trailer, setTrailer] = useState(null);\n  const [similar, setSimilar] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setMovie(await API.fetchMovie(id));\n      setTrailer(await API.fetchMovieVideos(id));\n      setSimilar(await API.fetchSimilarMovies(id));\n    })();\n\n    return function cleanUp() {\n      setMovie(null);\n      setTrailer(null);\n      setSimilar(null);\n    };\n  }, [id]);\n\n  const addMovieToList = (listId, listName) => {\n    const storage = JSON.parse(localStorage.lists);\n    const list = storage.find((list) => list.id === listId);\n    const id = movie.id;\n\n    if (list.movies.some((movie) => movie.id === id)) {\n      alert(`\"${movie.original_title}\" was added to \"${listName}\"`);\n    } else {\n      list.movies.push(movie);\n      localStorage.setItem(\"lists\", JSON.stringify(storage));\n\n      alert(`\"${movie.original_title}\" added to \"${listName}\"`);\n    }\n  };\n\n  return movie ? (\n    <div className=\"movie\">\n      <section className=\"movie__poster\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.original_title}\n          className=\"movie__poster-image\"\n        />\n      </section>\n\n      <section className=\"movie__description\">\n        <h1 className=\"movie__title\">{movie.original_title}</h1>\n        <Link to=\"/home\">\n          <FaHome className=\"movie-list__icons\" />\n        </Link>\n        <ListsMenu\n          listParent={false}\n          lists={JSON.parse(localStorage.lists)}\n          movie={movie}\n          addMovie={addMovieToList}\n        />\n\n        <div className=\"movie__details\">\n          <p className=\"movie__overview\">{movie.overview}</p>\n          <ul className=\"movie__genres\">\n            {movie.genres.map((genre) => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </ul>\n          <div className=\"youtube-container\">\n            <h2>Movie trailer</h2>\n            {trailer ? (\n              <Youtube\n                videoId={trailer.id}\n                id={trailer.id}\n                className=\"movie__trailer\"\n              />\n            ) : (\n              \"Fetching video trailer\"\n            )}\n          </div>\n          {similar ? (\n            similar.length === 0 ? null : (\n              <aside className=\"movie__similar-movies\">\n                <h3>Similar movies</h3>\n                {similar.map((movie, index) => {\n                  return (\n                    <Link to={`/movie/${movie.id}`} key={index}>\n                      <img\n                        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                        alt={movie.original_title}\n                        title={movie.original_title}\n                      />\n                    </Link>\n                  );\n                })}\n              </aside>\n            )\n          ) : (\n            \"fetching similar movies\"\n          )}\n        </div>\n      </section>\n    </div>\n  ) : (\n    <div className=\"fetching-movie\">Fetching movie</div>\n  );\n}\n\nexport default Movie;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./Components/Home/Home\";\nimport MoviesList from \"./Components/MoviesLists/MoviesLists\";\nimport Movie from \"./Components/Movie/Movie\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path=\"/movie/:id\">\n          <Movie />\n        </Route>\n        <Route path=\"/lists/:listName\">\n          <MoviesList />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}